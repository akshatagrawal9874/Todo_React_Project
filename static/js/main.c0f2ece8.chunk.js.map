{"version":3,"sources":["App.js","index.js","LCO-logo-white.png"],"names":["App","props","state","newItem","list","handleClick","bind","todoValue","id","Date","now","value","isDone","this","push","setState","updatedlist","filter","item","input","console","log","prevState","map","todo","completedStyle","fontStyle","color","textDecoration","src","logo","width","height","className","alt","type","placeholder","required","onChange","e","updateInput","target","onClick","addItem","disabled","length","key","style","name","checked","deleteItem","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"6QAiHeA,G,kBA5Gb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,QAAS,GACTC,KAAM,IAER,EAAKC,YAAY,EAAKA,YAAYC,KAAjB,gBANA,E,qEASXC,GACN,GAAkB,KAAdA,EAAkB,CACpB,IAAMJ,EAAU,CACdK,GAAIC,KAAKC,MACTC,MAAOJ,EACPK,QAAQ,GAEJR,EAAI,YAAOS,KAAKX,MAAME,MAC5BA,EAAKU,KAAKX,GAEVU,KAAKE,SAAS,CACZX,OACAD,QAAS,Q,iCAKJK,GACT,IACMQ,EADI,YAAOH,KAAKX,MAAME,MACHa,OAAO,SAAAC,GAAI,OAAIA,EAAKV,KAAOA,IACpDK,KAAKE,SAAS,CAAEX,KAAMY,M,kCAGZG,GACVN,KAAKE,SAAS,CAAEZ,QAASgB,M,kCAEfX,GAEVY,QAAQC,IAAI,UAAUb,GACtBK,KAAKE,SAAS,SAAAO,GAOZ,MAAO,CACHlB,KAPiBkB,EAAUlB,KAAKmB,IAAI,SAAAC,GAIpC,OAHIA,EAAKhB,KAAOA,IACZgB,EAAKZ,QAAUY,EAAKZ,QAEjBY,S,+BAOL,IAAD,OACDC,EAAiB,CACrBC,UAAW,SACXC,MAAO,UACPC,eAAgB,gBAElB,OACE,6BACE,yBAAKC,IAAKC,IAAMC,MAAM,MAAMC,OAAO,MAAMC,UAAU,OAAOC,IAAI,cAC9D,wBAAID,UAAU,aAAd,YACA,yBAAKA,UAAU,aAAf,kBAEE,6BACA,2BACEE,KAAK,OACLF,UAAU,aACVG,YAAY,eACZC,UAAQ,EACR1B,MAAOE,KAAKX,MAAMC,QAClBmC,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAYD,EAAEE,OAAO9B,UAE3C,4BACEsB,UAAU,UACVS,QAAS,kBAAM,EAAKC,QAAQ,EAAKzC,MAAMC,UACvCyC,UAAW/B,KAAKX,MAAMC,QAAQ0C,QAHhC,YAOA,yBAAKZ,UAAU,QACb,4BACGpB,KAAKX,MAAME,KAAKmB,IAAI,SAAAL,GACnB,OACE,wBAAI4B,IAAK5B,EAAKV,IACZ,yBAAKuC,MAAO7B,EAAKN,OAASa,EAAgB,MAC1C,2BACEU,KAAK,WACLa,KAAK,SACLC,QAAS/B,EAAKN,OACd0B,SAAU,kBAAM,EAAKjC,YAAYa,EAAKV,OAEpCU,EAAKP,MACT,4BACEsB,UAAU,MACVS,QAAS,kBAAM,EAAKQ,WAAWhC,EAAKV,MAFtC,sB,GA5FF2C,IAAMC,YCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,IAA0B,6C","file":"static/js/main.c0f2ece8.chunk.js","sourcesContent":["import React from \"react\";\nimport logo from \"./LCO-logo-white.png\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n    this.handleClick=this.handleClick.bind(this)\n  }\n\n  addItem(todoValue) {\n    if (todoValue !== \"\") {\n      const newItem = {\n        id: Date.now(),\n        value: todoValue,\n        isDone: false\n      };\n      const list = [...this.state.list];\n      list.push(newItem);\n\n      this.setState({\n        list,\n        newItem: \"\"\n      });\n    }\n  }\n\n  deleteItem(id) {\n    const list = [...this.state.list];\n    const updatedlist = list.filter(item => item.id !== id);\n    this.setState({ list: updatedlist });\n  }\n\n  updateInput(input) {\n    this.setState({ newItem: input });\n  }\n  handleClick(id)\n  {\n    console.log(\"changed\",id);\n    this.setState(prevState => {\n      const updatedTodos = prevState.list.map(todo => {\n          if (todo.id === id) {\n              todo.isDone = !todo.isDone\n          }\n          return todo\n      })\n      return {\n          list: updatedTodos\n      }\n  })\n  }\n  render() {\n    const completedStyle = {\n      fontStyle: \"italic\",\n      color: \"#cdcdcd\",\n      textDecoration: \"line-through\"\n  }\n    return (\n      <div>\n        <img src={logo} width=\"100\" height=\"100\" className=\"logo\" alt=\"Not Found\"/>\n        <h1 className=\"app-title\">ToDo App</h1>\n        <div className=\"container\">\n          Add an Item....\n          <br />\n          <input\n            type=\"text\"\n            className=\"input-text\"\n            placeholder=\"Write a Todo\"\n            required\n            value={this.state.newItem}\n            onChange={e => this.updateInput(e.target.value)}\n          />\n          <button\n            className=\"add-btn\"\n            onClick={() => this.addItem(this.state.newItem)}\n            disabled={!this.state.newItem.length}\n          >\n            Add Todo\n          </button>\n          <div className=\"list\">\n            <ul>\n              {this.state.list.map(item => {\n                return (\n                  <li key={item.id}>\n                    <div style={item.isDone ? completedStyle: null}>\n                    <input\n                      type=\"checkbox\"\n                      name=\"idDone\"\n                      checked={item.isDone}\n                      onChange={() => this.handleClick(item.id)}  \n                    />\n                      { item.value}\n                    <button\n                      className=\"btn\"\n                      onClick={() => this.deleteItem(item.id)}\n                    >\n                      Delete\n                    </button></div>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/LCO-logo-white.93326a91.png\";"],"sourceRoot":""}